1. 프로그래밍이란?

컴퓨터가 알아듣는 말로 소프트웨어를 만드는 것이 프로그래밍이라고 할 수 있다.

그리고 컴퓨터가 알아들을 수 있는 말을 프로그래밍 언어 라고한다.

1. 파이썬.
- 비 전공자를 대상으로 하는 코딩 교육 필요성이 확대되며.

데이터 분석과 인공 지능 붐과 함께 파이썬에 대한 관심이 늘고 있고, 주목할만한 언어 라고 할 수 있다.

- 배우기 쉬우면서, 기능이 뛰어나고, 생산성이 뛰어나다는 특징을 가지고 있다.

1. 설치

1. 변수(variable)

어떤 값을 갖는 하나의 저장공간이라 할 수 있다.

저장공간에 특정한 이름을 붙이고 값을 할당할 수 있다.

크게 숫자형 변수와, 문자형 변수등이 있다.

5.리스트

원소들이 연속적인 형태로 저장되는 형태의 자료형이며

저장 요소들이 모두 같은 자료형 일 필요는 없다.

안에 0개 이상의 원소가 저장가능하며

튜플과 마찬가지로 또다른 리스트를 원소로 가질 수도 있다.

리스트 내부함수로는 

해당 리스트에 저장된 원소를 오름차순으로 정렬해주는 sort

해당 리스트에 저장된 원소의 순서를 정반대로 뒤집어주는 reverse

해당 리스트 맨 마지막 위치에 전달 받은 데이터를 추가해주는 append 함수가 있다.

ex. 

exlist= [ 2 , 3, 1]

exlist.sort()

result [1, 2, 3]

exlist.reverse()

result [1, 3, 2]

exist.append(4)

result [2, 3 , 1 , 4]

del exlist[0]

result [3, 1]

6.인터프리터와 컴파일러

컴퓨터는 0과 1로 정보를 표현하는데 이떄의 언어를 기계어라고한다.

니모닉스를 활용하는 언어를 어셈블리어라고 하고 

이 둘을 저급언어라 한다.

사람의 언어에 더 가까운 프로그래밍 언어들을 고급언어라 한다.

사람언어에 가깝게 만들었기떄문에 다시 기계어로 번역을 해줘야하는데

라인 하나씩 실행하며 해석해주는 방식을 인터프리트라고 하고.

ex.  파이썬 셸

처음 부터 끝까지 읽고 해석해주는 방식을 컴파일 이라고 한다.

1. 파이썬의 설치와 실행

python org에서 배포하는 일반적인 배포판과

과학 계산용으로 널리 사용되는 파이썬 패키지들을 쉽게 관리할

수 있는 아나콘다 배포판도 있다. 데이터 분석및 머신러닝에

 사용된다 .

기본 코드는 파이썬 버전에 따라서 달라지는 부분이 없으나 여러가리

파이썬 패키지를 추가로 설치 사용할때는 파이썬 버전을 맞춰야 할 떄가 있는데, 그럴떄 파이썬 가상환경을 활용하면 파이썬 버전을 다르게 할 수 있다.

conda create -n (환경이름) python=(파이썬버전)

하면 아나콘다 밑 envs fㅏ는 곳에 환경이름에 해당하는 환경이 해당 파이썬 버전으로 만들어진다.

그다음에 만들어진 환경으로 이동하고싶으면

conda activate ( 환경이름) 하면 앞에 베이스가 환경이름 으로 바뀐다.

기본으로 다시 돌아가려면 conda deactivate 하면된다.

1. 파이썬 인터프리터

대화식 사용. (커맨드 셸)

실제 프로그래밍을 할때는 idle에서 파일형태로 만들어 두었다가 사용한다. 파이썬은 들여쓰기로 영역을 구분하기 때문에 들여쓰기를 잘 지켜줘야한다.

터미널로 파이썬 설치폴더로 찾아가 >python (파일디렉토리)를 입력하는 식으로도 프로그램 전체를 번역하며 실행할 수 있다.

2. 제어구조

분기와 반복을 파이썬에서 어떻게 사용하는가?

1. while 사용 반복문

num = 0

while num ≤ 100:

print(num)

num = num + 1

-1

a= input()등으로 변수값을 입력 받을 수 있다. 

-2

round()는 반올림을 해주는 함수다.

round(1.2345, 2) → 1.23

round(1.2345, 3) → 1.235

1. 조건문(if-elif-else)

if a < 0:

elif a == 0:

else:

%는 나머지 계산이고 나머지를 반환한다. //는 몫 반환.

-1 조건에 따라 반복문 중단하기

while True:

a= int(input())

if a > 0 :

break

1. for을 사용하는 반복문

파이썬에서 포문은 리스트와같은 시퀀스(sequence)를 이용해 원하는 명령어를 반복할떄 쓰인다.

x=[’ab’,’abc,’abcd’]

for x in exalist:

print(x, len(x))

-1 range()

list(range(2,7)) #2이상 7미만 리스트를 만들어라.

result [2,3,4,5,6]

for I in range(2,7):

print(i)

-2 split()

**문자열.split()** 

split(sep='구분자', maxsplit=분할횟수)

구분자를 기준으로 문자열을 구분해 리스트를 만들어준다.

스플릿 메소드를 사용해 문자열을 분할할 수 있다.

ex) ‘0 100’.split()

result [’0’, ‘100’]